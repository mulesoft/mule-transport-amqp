<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:amqps="http://www.mulesoft.org/schema/mule/amqps" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
    xmlns:test="http://www.mulesoft.org/schema/mule/test" xmlns:spring="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/amqps http://www.mulesoft.org/schema/mule/amqps/current/mule-amqps.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
       http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <amqps:connector name="amqpsTlsKeyStores"
        virtualHost="${amqpVirtualHost}"
        username="${amqpUserName}"
        password="${amqpPassword}"
        host="${amqpHost}"
        port="${amqpSslPort}"
        sslProtocol="TLSv1.2">
        <amqps:ssl-key-store path="ssl/client/keycert.p12" type="PKCS12"
            algorithm="SunX509" keyPassword="MySecretPassword" storePassword="MySecretPassword" />
        <amqps:ssl-trust-store path="ssl/client/trustStore.jks" type="JKS"
            algorithm="SunX509" storePassword="rabbitstore" />
    </amqps:connector>

    <amqps:connector name="amqpsTlsKeyStoresWithoutKeystore" 
        virtualHost="${amqpVirtualHost}"
        username="${amqpUserName}"
        password="${amqpPassword}"
        host="${amqpHost}"
        port="${amqpSslPort}"
        sslProtocol="TLSv1.2">
        <amqps:ssl-trust-store path="ssl/client/trustStore.jks" type="JKS"
            algorithm="SunX509" storePassword="rabbitstore" />
    </amqps:connector>

    <!-- Declare an exchange, a queue, bind the latter to the former -->
    <amqps:endpoint name="amqpsFullGlobalEndpoint" exchangeName="target-exchange"
        exchangeType="fanout" exchangeAutoDelete="true" exchangeDurable="false"
        queueName="target-queue" queueDurable="false" queueExclusive="false"
        queueAutoDelete="true" routingKey="sslAdvancedTests" connector-ref="amqpsTlsKeyStores"/>

    <amqps:endpoint name="amqpsFullGlobalEndpointWithoutKeystore"
        exchangeName="target-without-keystore-exchange" exchangeType="fanout"
        exchangeAutoDelete="true" exchangeDurable="false" queueName="target-without-keystore-queue"
        queueDurable="false" queueExclusive="false" queueAutoDelete="true"
        routingKey="sslAdvancedTestsWithoutKeystore" connector-ref="amqpsTlsKeyStoresWithoutKeystore"/>

    <flow name="sslDispatcher">
        <vm:inbound-endpoint path="sslDispatcher.in" />
        <amqps:outbound-endpoint ref="amqpsFullGlobalEndpoint" />
    </flow>

    <flow name="sslReceiver">
        <amqps:inbound-endpoint ref="amqpsFullGlobalEndpoint" />
        <test:component />
    </flow>

    <flow name="sslDispatcherWithoutKeystore">
        <vm:inbound-endpoint path="sslDispatcherWithoutKeystore.in" />
        <amqps:outbound-endpoint ref="amqpsFullGlobalEndpointWithoutKeystore" />
    </flow>

    <flow name="sslReceiverWithoutKeystore">
        <amqps:inbound-endpoint ref="amqpsFullGlobalEndpointWithoutKeystore" />
        <test:component />
    </flow>
</mule>
