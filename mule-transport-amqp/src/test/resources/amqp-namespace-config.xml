<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:amqp="http://www.mulesoft.org/schema/mule/amqp" xmlns:spring="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/amqp http://www.mulesoft.org/schema/mule/amqp/current/mule-amqp.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <amqp:amqpmessage-to-object-transformer
        name="a2o" />

    <amqp:object-to-amqpmessage-transformer
        name="o2a" />

    <amqp:connector name="amqpDefaultConnector" />

    <!-- Declare an exchange, a queue, bind the latter to the former -->
    <amqp:endpoint name="amqpFullGlobalEndpoint" exchangeName="target-exchange"
        exchangeType="fanout" exchangeDurable="true" exchangeAutoDelete="false"
        queueName="target-queue" queueDurable="true" queueAutoDelete="false"
        queueExclusive="true" routingKey="a.b.c" connector-ref="amqpDefaultConnector" />

    <!-- Use an existing queue -->
    <amqp:endpoint name="amqpExistingQueueGlobalEndpoint"
        queueName="target-queue" />

    <!-- Declare a server-named exclusive queue and bind it to an existing exchange -->
    <amqp:endpoint name="amqpPrivateQueueGlobalEndpoint"
        exchangeName="target-exchange" routingKey="a.b.c" />

    <!-- Declare a queue and bind it to an existing exchange -->
    <amqp:endpoint name="amqpDeclareQueueGlobalEndpoint"
        exchangeName="target-exchange" queueName="target-queue" queueDurable="true"
        queueAutoDelete="false" queueExclusive="false" routingKey="a.b.c" />

    <!-- Use an existing exchange -->
    <amqp:endpoint name="amqpExistingExchangeGlobalEndpoint"
        exchangeName="target-exchange" />

    <!-- Declare an exchange -->
    <amqp:endpoint name="amqpDeclareExchangeGlobalEndpoint"
        exchangeName="target-exchange" exchangeType="topic" exchangeDurable="true"
        exchangeAutoDelete="false" />

    <!-- Use an existing queue -->
    <amqp:endpoint name="amqpTransactedEndpoint" queueName="target-queue">
        <!-- Transaction, default recover strategy -->
        <amqp:transaction action="ALWAYS_BEGIN" />
    </amqp:endpoint>

    <!-- Set queue and exchange arguments -->
    <amqp:endpoint name="amqpEndpointWithArguments" exchangeName="target-exchange"
        exchangeType="fanout" exchangeDurable="true" exchangeAutoDelete="false"
        queueName="target-queue" queueDurable="true" queueAutoDelete="false"
        queueExclusive="true" routingKey="a.b.c">
        <properties>
            <spring:entry key="amqp-exchange.alternate-exchange"
                value="some-exchange" />
            <spring:entry key="amqp-queue.x-dead-letter-exchange"
                value="some-queue" />
        </properties>
    </amqp:endpoint>

    <amqp:endpoint name="amqpTransactedEndpointWithRecoverStrategy"
        queueName="target-queue">
        <!-- Transaction, explicit recover strategy -->
        <amqp:transaction action="ALWAYS_BEGIN"
            recoverStrategy="REQUEUE" />
    </amqp:endpoint>

    <flow name="ackerFlow">
        <amqp:acknowledge-message multiple="true" />
    </flow>
</mule>
